{"version":3,"sources":["store/actions/actionTypes.js","store/reducers/reducer.js","store/store.js","components/Header.jsx","store/actions/index.js","containers/UserInput.jsx","components/TableRow.jsx","components/Spinner.jsx","components/Message.jsx","containers/Table.jsx","containers/Pagination.jsx","App.jsx","index.js"],"names":["NEXT_PAGE","PREVIOUS_PAGE","GET_API_DATA_START","GET_API_DATA_READY","GET_API_DATA_ERROR","SEARCH_QUERY_SUBMIT","initialState","shows","isLoading","currentPage","tableCaption","isLastPage","error","search","reducer","state","arguments","length","undefined","action","type","Object","objectSpread","data","countryList","lastPageNumber","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","header","react_default","a","createElement","traktApi","baseUrl","headers","Content-type","trakt-api-key","trakt-api-version","fetchData","dispatch","queryUrl","years","queryString","country","fetch","then","response","status","pageCount","get","thisPage","json","console","log","catch","getShowsData","Promise","all","map","show","ids","imdb","tv_results","poster_path","link","title","poster","year","getImagesData","result","payload","caption","onError","UserInput","submitHandler","event","preventDefault","query","_this","refs","searchString","value","searchYear","searchCountry","props","getState","this","key","code","name","id","onSubmit","htmlFor","ref","placeholder","min","max","Date","getFullYear","defaultValue","Component","connect","TableRow","width","index","src","alt","toUpperCase","Spinner","Message","message","Table","components_Spinner","components_Message","rows","i","components_TableRow","Pagination","nextPage","previousPage","onClick","App","es","Header","containers_UserInput","containers_Table","containers_Pagination","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.d75d1c3f.chunk.js","sourcesContent":["export const NEXT_PAGE = 'NEXT_PAGE';\r\nexport const PREVIOUS_PAGE = 'PREVIOUS_PAGE';\r\nexport const GET_API_DATA_START = 'GET_API_DATA_START';\r\nexport const GET_API_DATA_READY = 'GET_API_DATA_READY';\r\nexport const GET_API_DATA_ERROR = 'GET_API_DATA_ERROR';\r\nexport const SEARCH_QUERY_SUBMIT = 'SEARCH_QUERY_SUBMIT';","import {\r\n    GET_API_DATA_START,\r\n    GET_API_DATA_READY,\r\n    GET_API_DATA_ERROR,\r\n    SEARCH_QUERY_SUBMIT,\r\n    NEXT_PAGE, PREVIOUS_PAGE\r\n} from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    shows: [],\r\n    isLoading: true,\r\n    currentPage: 1,\r\n    tableCaption: '',\r\n    isLastPage: false,\r\n    error: false,\r\n    search: null\r\n};\r\n\r\nfunction reducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case GET_API_DATA_START:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            }\r\n        case GET_API_DATA_READY:\r\n            return {\r\n                ...state,\r\n                shows: action.data.shows,\r\n                countryList: action.data.countryList,\r\n                tableCaption: action.data.tableCaption,\r\n                isLastPage: action.data.isLastPage,\r\n                lastPageNumber: action.data.lastPageNumber,\r\n                isLoading: false,\r\n            }\r\n        case GET_API_DATA_ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                isLoading: false\r\n            }\r\n        case SEARCH_QUERY_SUBMIT:\r\n            return {\r\n                ...state,\r\n                currentPage: 1,\r\n                search: action.search\r\n            }\r\n        case NEXT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: state.currentPage + 1\r\n            };\r\n\r\n        case PREVIOUS_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: state.currentPage - 1\r\n            };\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;\r\n\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducer from './reducers/reducer';\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    composeEnhancers(applyMiddleware(thunk)));\r\n\r\nexport default store;","import React from 'react';\r\n\r\nfunction header() {\r\n    return <h1>Look up your favorite TV shows!</h1>;\r\n    \r\n}\r\n\r\nexport default header;","import { GET_API_DATA_START, GET_API_DATA_READY, GET_API_DATA_ERROR } from \"./actionTypes\";\r\n\r\n// action functions\r\n\r\n// Trakt API info in variables\r\nconst traktApi = {\r\n    baseUrl:  'https://api.trakt.tv/',\r\n    headers: {\r\n        'Content-type': 'application/json',\r\n        'trakt-api-key': '38760291a0e06beeee9e5a43a2217cea8108ee0dc6d9a2fbcf784ac9aec2bdc3',\r\n        'trakt-api-version': 2\r\n    }\r\n}\r\n\r\n// dispatch creator function with redux thunk calls before monting the app component\r\nfunction fetchData(state) {\r\n    return dispatch => {\r\n        dispatch({type: GET_API_DATA_START});\r\n\r\n        const shows = getShowsData(state);\r\n        shows.then(data => {\r\n            Promise.all(data.shows.map(show => {\r\n                return getImagesData(show);\r\n            })).then(result => {\r\n                    fetch(traktApi.baseUrl + 'countries/shows', {\r\n                        headers: traktApi.headers\r\n                    }).then(response => response.json())\r\n                    .then(countryList => {\r\n                        const caption = state.search\r\n                            && state.search.queryString\r\n                            ? \"Search '\" + state.search.queryString + \"'\"\r\n                            : \"Trending\";\r\n                        dispatch(onSuccess({\r\n                            shows: result,\r\n                            countryList: countryList,\r\n                            tableCaption: caption,\r\n                            isLastPage: data.isLastPage,\r\n                            lastPageNumber: data.lastPageNumber\r\n                        }));\r\n                    });\r\n                });\r\n        }).catch(error => dispatch(onError(error)));\r\n\r\n        \r\n    }\r\n}\r\n\r\nfunction onSuccess(payload) {\r\n    return {\r\n        type: GET_API_DATA_READY,\r\n        data: {\r\n            shows: payload.shows,\r\n            countryList: payload.countryList,\r\n            tableCaption: payload.tableCaption,\r\n            isLastPage: payload.isLastPage,\r\n            lastPageNumber: payload.lastPageNumber\r\n        }\r\n    };\r\n}\r\n\r\nfunction onError(error) {\r\n    return {\r\n        type: GET_API_DATA_ERROR,\r\n        error: error\r\n    };\r\n}\r\n\r\n// Used to get the shows data from trakt API\r\nfunction getShowsData(state) {\r\n    const { currentPage, search } = state;\r\n    let queryUrl = '';\r\n    let isLastPage = false;\r\n    let lastPageNumber;\r\n    if(!search) {\r\n        queryUrl = traktApi.baseUrl + 'shows/trending?extended=full&page=' + currentPage\r\n    } else {\r\n        queryUrl = traktApi.baseUrl + 'search/show?extended=full&page='\r\n                    + currentPage + '&years=' + search.years\r\n                    + '&fields=title&query=' + search.queryString\r\n                    + '&countries=' + search.country + '&limit=10';\r\n    }\r\n\r\n    return fetch(queryUrl, {\r\n        headers: traktApi.headers\r\n    }).then(response => {\r\n        if(response.status !== 200) {\r\n            console.log('Looks like there was a problem. Status Code: ' +\r\n                response.status);\r\n            return;\r\n        }\r\n        const pageCount = lastPageNumber = response.headers.get(\"X-Pagination-Page-Count\");\r\n        const thisPage = response.headers.get(\"X-Pagination-Page\");\r\n        isLastPage = (pageCount === thisPage);\r\n        return response.json();\r\n    }).then(data => {\r\n        return {\r\n            shows: data,\r\n            isLastPage: isLastPage,\r\n            lastPageNumber\r\n        }\r\n    })\r\n    .catch(error => {\r\n        return error;\r\n    });\r\n}\r\n\r\n// Used to fetch image links for posters\r\nfunction getImagesData(show) {\r\n    const params = '?api_key=bcdbbabd42939d9fe3b0800ec18a70cf&external_source=imdb_id';\r\n    const queryUrl = 'https://api.themoviedb.org/3/find/' + show.show.ids.imdb + params;\r\n    \r\n    return fetch(queryUrl)\r\n        .then(response => {\r\n            if(response.status !== 200) {\r\n                console.log('Looks like there was a problem. Status Code: ' +\r\n                    response.status);\r\n                return;\r\n            }\r\n            return response.json();\r\n        })\r\n        .then(data => {\r\n            if(data.tv_results.length !== 0 && data.tv_results[0].poster_path) {\r\n                const link = 'https://image.tmdb.org/t/p/w200' + data.tv_results[0].poster_path;\r\n                return {\r\n                    title: show.show.title,\r\n                    poster: link,\r\n                    year: show.show.year,\r\n                    country: show.show.country\r\n                };\r\n            }\r\n            return {\r\n                title: show.show.title,\r\n                poster: \"\",\r\n                year: show.show.year,\r\n                country: \"\"\r\n            };\r\n        })\r\n        .catch(error  => {\r\n            console.log('Fetch Error : -S', error);\r\n        });\r\n}\r\n\r\nexport { fetchData };","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchData } from '../store/actions/index';\r\nimport store from '../store/store';\r\nimport { SEARCH_QUERY_SUBMIT } from '../store/actions/actionTypes';\r\n\r\n\r\nclass UserInput extends Component {\r\n    submitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const query = {\r\n            queryString: this.refs.searchString.value,\r\n            years: this.refs.searchYear.value,\r\n            country: this.refs.searchCountry.value\r\n        }\r\n\r\n        this.props.dispatch({ type: SEARCH_QUERY_SUBMIT, search: query });\r\n        this.props.dispatch(fetchData(store.getState()));\r\n    }\r\n\r\n    render() {\r\n        if(this.props.isLoading || this.props.error) {\r\n            return null;\r\n        }\r\n\r\n        const countryList = this.props.countryList.map((country, key) => {\r\n            return <option key={key} value={country.code}>{country.name}</option>\r\n        });\r\n\r\n        return (\r\n            <div id=\"userInput\">\r\n                <form onSubmit={this.submitHandler}>\r\n                    <label htmlFor=\"searchString\">\r\n                        Title: <input\r\n                            type=\"text\"\r\n                            ref=\"searchString\"\r\n                            name=\"searchString\"\r\n                            placeholder=\"Search shows...\"\r\n                        />\r\n                    </label>\r\n                    <label htmlFor=\"searchYear\">\r\n                        Year: <input type=\"number\"\r\n                            min=\"1950\"\r\n                            max={new Date().getFullYear()}\r\n                            ref=\"searchYear\"\r\n                            name=\"searchYear\"\r\n                        />\r\n                    </label>\r\n                    <label htmlFor=\"searchCountry\">\r\n                        Country: <select ref=\"searchCountry\" name=\"searchCountry\">\r\n                            <option defaultValue></option>\r\n                            {countryList}\r\n                        </select>\r\n                    </label>\r\n                    <button type=\"submit\">Search...</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        countryList: state.countryList,\r\n        isLoading: state.isLoading,\r\n        error: state.error\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(UserInput);","import React from 'react'\r\n\r\nconst TableRow = (props) => {\r\n    return (\r\n            <tr>\r\n                <th width=\"5%\">{props.index}</th>\r\n                <td width=\"100px\">\r\n                    <img\r\n                        src={props.show.poster}\r\n                        alt={'\"' + props.show.title + '\" poster.'}\r\n                        width='100px'\r\n                    />\r\n                </td>\r\n                <td>{props.show.title}</td>\r\n                <td width=\"10%\">{props.show.year}</td>\r\n                <td width=\"10%\">{props.show.country ? props.show.country.toUpperCase() : 'n/a'}</td>\r\n            </tr>\r\n    );\r\n}\r\n\r\nexport default TableRow;\r\n","import React from 'react'\r\n\r\nconst Spinner = (props) => {\r\n    return (\r\n        <div id=\"loadingSVG\">\r\n            <img src='91.svg' alt='...LOADING' />\r\n            <h2>loading...</h2>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Spinner;\r\n","import React from 'react';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div>\r\n            <h1>{props.message}</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Message;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchData } from '../store/actions/index';\r\n\r\nimport TableRow from '../components/TableRow';\r\nimport Spinner from '../components/Spinner';\r\nimport Message from '../components/Message';\r\n\r\n\r\nclass Table extends Component {\r\n    componentDidMount() {\r\n        this.props.dispatch(fetchData({\r\n            currentPage: this.props.currentPage,\r\n            ...this.props.search\r\n        }));\r\n    }\r\n\r\n    render() {\r\n        if(this.props.isLoading) {\r\n            return <Spinner />\r\n        } else {\r\n            if(this.props.error)\r\n                return  <Message message={'SOMETHING BAD HAPPENED!'} />\r\n\r\n            if(this.props.shows.length === 0)\r\n                return <Message message={'NOTHING FOUND!'} />\r\n\r\n            let rows = this.props.shows.map((show, i) => {\r\n                return <TableRow key={i} index={i + 1} show={show} />\r\n            });\r\n\r\n            return (\r\n                <table>\r\n                    <caption>\r\n                        {this.props.tableCaption}\r\n                    </caption>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Number</th>\r\n                            <th>Poster</th>\r\n                            <th>Title</th>\r\n                            <th>Year</th>\r\n                            <th>Country</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {rows}\r\n                    </tbody>\r\n                </table>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        shows: state.shows,\r\n        search: state.search,\r\n        currentPage: state.currentPage,\r\n        isLoading: state.isLoading,\r\n        tableCaption: state.tableCaption,\r\n        error: state.error\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Table);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchData } from '../store/actions/index';\r\nimport store from '../store/store';\r\nimport { NEXT_PAGE, PREVIOUS_PAGE } from '../store/actions/actionTypes';\r\n\r\n\r\nclass Pagination extends Component {\r\n    nextPage = () => {\r\n        if(this.props.isLastPage) {\r\n            return;\r\n        }\r\n        this.props.dispatch({ type: NEXT_PAGE });\r\n        this.props.dispatch(fetchData(store.getState()));\r\n    }\r\n\r\n    previousPage = () => {\r\n        if(this.props.currentPage === 1) {\r\n            return;\r\n        }\r\n        this.props.dispatch({ type: PREVIOUS_PAGE });\r\n        this.props.dispatch(fetchData(store.getState()));\r\n    }\r\n\r\n    render() {\r\n        if(this.props.shows.length === 0 || this.props.isLoading) {\r\n            return null;\r\n        }\r\n        return (\r\n            <div id=\"pagination\">\r\n                <div id=\"prev\">\r\n                    <button onClick={this.previousPage}>PREV</button>\r\n                </div>\r\n                <div>\r\n                    <p>page {this.props.currentPage} of {this.props.lastPageNumber}</p>\r\n                </div>\r\n                <div id=\"next\">\r\n                    <button onClick={this.nextPage}>NEXT</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        shows: state.shows,\r\n        currentPage: state.currentPage,\r\n        isLastPage: state.isLastPage,\r\n        lastPageNumber: state.lastPageNumber,\r\n        isLoading: state.isLoading\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Pagination);","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\n\nimport './static/css/App.css';\n\nimport Header from './components/Header';\nimport UserInput from './containers/UserInput';\nimport Table from './containers/Table';\nimport Pagination from './containers/Pagination';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Header />\n        <UserInput />\n        <Table />\n        <Pagination />\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './static/css/App.css';\nimport App from './App.jsx';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n// serviceWorker.unregister();\n"],"sourceRoot":""}